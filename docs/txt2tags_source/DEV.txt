Hyer 编程风格
    hyer(http://code.google.com/p/hyer/)推荐的编码风格<renlu.xu>
Last Updated: %%mtime(%c)

%! target:html
%! encoding: UTF-8
%! options: --toc
%! postproc(html): @@ <BR>
%! postproc(xhtml): @@ <BR>
%! postproc(html): {{(.*?)}} <\1>
%!postproc(html): {{ <
%!postproc(html): }} >

""" {{style type="text/css"}}
""" body {
""" margin:auto 150px ;
""" }
""" .blocked { background:#ccc;border:1px solid gray;
""" padding:10px;
""" margin-left:50px;margin-right:50px;margin-bottom:10px;
""" } 
""" {{/style}}

==编码==
    所有代码均以#coding:utf-8 开头.

==模块==
    模块只做命名空间用,--init--.py保留为空文件.

==类==
    类名应用完整的单词连起来,确保意义明确不含糊.
    类名的每个单词的首字母应该大写,第一个单词的首字母也应该大写.
    类名一般推荐使用单数形式.

==方法==
    方法也应有完整的含义;
    方法如果是多个单词,第一个单词的首字母为小写，其余单词的首字母应为大写。

==参数==
    同[方法]的规则

==常数==
    常数应为全大写;
    某些内部使用的比较特别的dict的key也需要遵循常数的规则.

==文件名/目录名==
    文件名／目录名应为全小写.
    文件名的每个单词都应小写,单词之间用下划线连接。比如production_line.py

==import==
    Import时,尽量保证module以"hyer."开头
    
==空行==
    在import不同类型包时，可用一个换行区分。
    在docstring与class/functions之间可以加一个换行.
    在class/functions之前可以加一个换行。

==空格==
    所有文件不使用tab,用4个空格缩进;

==注释==
    [来自赖勇浩的博客]
    业界普遍认同 Python 的注释分为两种的概念，一种是由 # 开头的“真正的”注释，另一种是 docstrings。前者表明为何选择当前实现以及这种实现的原理和难点，后者表明如何使用这个包、模块、类、函数（方法），甚至包括使用示例和单元测试。坚持适当注释原则。对不存在技术难点的代码坚持不注释，对存在技术难点的代码必须注释。但与注释不同，推荐对每一个包、模块、类、函数（方法）写 docstrings，除非代码一目了然，非常简单。
    另注:
    对于太细节的部分,用#来注释即可。

==常用词汇==
    常用词/常用缩写指业内普遍缩写的,如Configure->Config,Class->klass等,可以使用缩写.业内普遍使用大写的,应当大写,如HTML,XML等.

==pythonnic==
    推荐采用pythonnic风格的编码.
